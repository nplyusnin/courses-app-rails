---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/courses":
    get:
      summary: List of courses
      tags:
      - Courses List
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    preview_image:
                      type: string
                      nullable: true
                  required:
                  - id
                  - title
                  - preview_image
  "/api/v1/courses/{id}":
    get:
      summary: Course details
      tags:
      - Course Details
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  image_preview:
                    type: string
                    nullable: true
                  description:
                    type: string
                required:
                - id
                - title
                - image_preview
                - description
  "/api/v1/students/courses":
    get:
      summary: List of study courses
      tags:
      - Study Courses List
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    preview_image:
                      type: string
                      nullable: true
                  required:
                  - id
                  - title
                  - preview_image
  "/api/v1/students/courses/{course_id}/lessons":
    get:
      summary: List of study lessons
      tags:
      - Study Lessons List
      parameters:
      - name: course_id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                  required:
                  - id
                  - title
  "/api/v1/students/courses/{course_id}/lessons/{id}":
    get:
      summary: Lesson details
      tags:
      - Lesson Details
      parameters:
      - name: course_id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Lesson ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                    nullable: true
                required:
                - id
                - title
                - content
  "/api/v1/students/courses/{course_id}/lessons/{id}/done":
    post:
      summary: Mark lesson as done
      tags:
      - Mark Lesson as Done
      parameters:
      - name: course_id
        in: path
        description: Course ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Lesson ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Ok
  "/api/v1/users/sign_in":
    post:
      summary: Sign in a user
      tags:
      - User Sessions
      parameters: []
      responses:
        '201':
          description: User signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Вам необходимо войти в систему или зарегистрироваться.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                  required:
                  - email
                  - password
  "/api/v1/users":
    delete:
      summary: Sign out a user
      tags:
      - User Sessions
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '204':
          description: Not content
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Your Bearer token
